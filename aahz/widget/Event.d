module aahz.widget.Event;

import aahz.widget.Widget;
import derelict.sdl.sdltypes;

typedef ulong sgevent;
typedef ushort sgkey;
typedef uint sgcombo;

enum KeySource : sgkey {
	KEYBOARD = 0x8000,
	MOUSE = 0x4000,
	JOYSTICK = 0x2000
}

enum EventType : ubyte {
	COMBO,
	MOVE1,
	MOVE2,
	MOVE3,
	KEY_DOWN,
	KEY_UP,
	MOUSEWHEEL_UP,
	MOUSEWHEEL_DOWN,
	CURSOR_ENTER,
	CURSOR_LEAVE,
	CURSOR_DOWN,
	CURSOR_UP
}

union Event {	// 8 bytes
	struct {
		EventType type;
		union {	// 7 bytes
			struct {
				short diffX;
				short diffY;
				ubyte[3] unused1;
			}
			struct {
				sgkey key;
				char[4] utf8;	// invalid if key is not of type SGK_KEYBOARD
				ubyte unused2;
			}
			struct {
				sgcombo combo;
				ubyte[3] unused3;
			}
		}
	}
	sgevent value;
}

enum Key : sgkey {
	UNKNOWN = SDLK_UNKNOWN | KeySource.KEYBOARD,
	FIRST = SDLK_FIRST | KeySource.KEYBOARD,
	BACKSPACE = SDLK_BACKSPACE | KeySource.KEYBOARD,
	TAB = SDLK_TAB | KeySource.KEYBOARD,
	CLEAR = SDLK_CLEAR | KeySource.KEYBOARD,
	RETURN = SDLK_RETURN | KeySource.KEYBOARD,
	PAUSE = SDLK_PAUSE | KeySource.KEYBOARD,
	ESCAPE = SDLK_ESCAPE | KeySource.KEYBOARD,
	SPACE = SDLK_SPACE | KeySource.KEYBOARD,
	EXCLAIM = SDLK_EXCLAIM | KeySource.KEYBOARD,
	QUOTEDBL = SDLK_QUOTEDBL | KeySource.KEYBOARD,
	HASH = SDLK_HASH | KeySource.KEYBOARD,
	DOLLAR = SDLK_DOLLAR | KeySource.KEYBOARD,
	AMPERSAND = SDLK_AMPERSAND | KeySource.KEYBOARD,
	QUOTE = SDLK_QUOTE | KeySource.KEYBOARD,
	LEFTPAREN = SDLK_LEFTPAREN | KeySource.KEYBOARD,
	RIGHTPAREN = SDLK_RIGHTPAREN | KeySource.KEYBOARD,
	ASTERISK = SDLK_ASTERISK | KeySource.KEYBOARD,
	PLUS = SDLK_PLUS | KeySource.KEYBOARD,
	COMMA = SDLK_COMMA | KeySource.KEYBOARD,
	MINUS = SDLK_MINUS | KeySource.KEYBOARD,
	PERIOD = SDLK_PERIOD | KeySource.KEYBOARD,
	SLASH = SDLK_SLASH | KeySource.KEYBOARD,
	_0 = SDLK_0 | KeySource.KEYBOARD,
	_1 = SDLK_1 | KeySource.KEYBOARD,
	_2 = SDLK_2 | KeySource.KEYBOARD,
	_3 = SDLK_3 | KeySource.KEYBOARD,
	_4 = SDLK_4 | KeySource.KEYBOARD,
	_5 = SDLK_5 | KeySource.KEYBOARD,
	_6 = SDLK_6 | KeySource.KEYBOARD,
	_7 = SDLK_7 | KeySource.KEYBOARD,
	_8 = SDLK_8 | KeySource.KEYBOARD,
	_9 = SDLK_9 | KeySource.KEYBOARD,
	COLON = SDLK_COLON | KeySource.KEYBOARD,
	SEMICOLON = SDLK_SEMICOLON | KeySource.KEYBOARD,
	LESS = SDLK_LESS | KeySource.KEYBOARD,
	EQUALS = SDLK_EQUALS | KeySource.KEYBOARD,
	GREATER = SDLK_GREATER | KeySource.KEYBOARD,
	QUESTION = SDLK_QUESTION | KeySource.KEYBOARD,
	AT = SDLK_AT | KeySource.KEYBOARD,

	LEFTBRACKET = SDLK_LEFTBRACKET | KeySource.KEYBOARD,
	BACKSLASH = SDLK_BACKSLASH | KeySource.KEYBOARD,
	RIGHTBRACKET = SDLK_RIGHTBRACKET | KeySource.KEYBOARD,
	CARET = SDLK_CARET | KeySource.KEYBOARD,
	UNDERSCORE = SDLK_UNDERSCORE | KeySource.KEYBOARD,
	BACKQUOTE = SDLK_BACKQUOTE | KeySource.KEYBOARD,
	A = SDLK_a | KeySource.KEYBOARD,
	B = SDLK_b | KeySource.KEYBOARD,
	C = SDLK_c | KeySource.KEYBOARD,
	D = SDLK_d | KeySource.KEYBOARD,
	E = SDLK_e | KeySource.KEYBOARD,
	F = SDLK_f | KeySource.KEYBOARD,
	G = SDLK_g | KeySource.KEYBOARD,
	H = SDLK_h | KeySource.KEYBOARD,
	I = SDLK_i | KeySource.KEYBOARD,
	J = SDLK_j | KeySource.KEYBOARD,
	K = SDLK_k | KeySource.KEYBOARD,
	L = SDLK_l | KeySource.KEYBOARD,
	M = SDLK_m | KeySource.KEYBOARD,
	N = SDLK_n | KeySource.KEYBOARD,
	O = SDLK_o | KeySource.KEYBOARD,
	P = SDLK_p | KeySource.KEYBOARD,
	Q = SDLK_q | KeySource.KEYBOARD,
	R = SDLK_r | KeySource.KEYBOARD,
	S = SDLK_s | KeySource.KEYBOARD,
	T = SDLK_t | KeySource.KEYBOARD,
	U = SDLK_u | KeySource.KEYBOARD,
	V = SDLK_v | KeySource.KEYBOARD,
	W = SDLK_w | KeySource.KEYBOARD,
	X = SDLK_x | KeySource.KEYBOARD,
	Y = SDLK_y | KeySource.KEYBOARD,
	Z = SDLK_z | KeySource.KEYBOARD,
	DELETE = SDLK_DELETE | KeySource.KEYBOARD,
	/* End of ASCII mapped keysyms */

	/* International keyboard syms */
	WORLD_0 = SDLK_WORLD_0 | KeySource.KEYBOARD,      /* 0xA0 */
	WORLD_1 = SDLK_WORLD_1 | KeySource.KEYBOARD,
	WORLD_2 = SDLK_WORLD_2 | KeySource.KEYBOARD,
	WORLD_3 = SDLK_WORLD_3 | KeySource.KEYBOARD,
	WORLD_4 = SDLK_WORLD_4 | KeySource.KEYBOARD,
	WORLD_5 = SDLK_WORLD_5 | KeySource.KEYBOARD,
	WORLD_6 = SDLK_WORLD_6 | KeySource.KEYBOARD,
	WORLD_7 = SDLK_WORLD_7 | KeySource.KEYBOARD,
	WORLD_8 = SDLK_WORLD_8 | KeySource.KEYBOARD,
	WORLD_9 = SDLK_WORLD_9 | KeySource.KEYBOARD,
	WORLD_10 = SDLK_WORLD_10 | KeySource.KEYBOARD,
	WORLD_11 = SDLK_WORLD_11 | KeySource.KEYBOARD,
	WORLD_12 = SDLK_WORLD_12 | KeySource.KEYBOARD,
	WORLD_13 = SDLK_WORLD_13 | KeySource.KEYBOARD,
	WORLD_14 = SDLK_WORLD_14 | KeySource.KEYBOARD,
	WORLD_15 = SDLK_WORLD_15 | KeySource.KEYBOARD,
	WORLD_16 = SDLK_WORLD_16 | KeySource.KEYBOARD,
	WORLD_17 = SDLK_WORLD_17 | KeySource.KEYBOARD,
	WORLD_18 = SDLK_WORLD_18 | KeySource.KEYBOARD,
	WORLD_19 = SDLK_WORLD_19 | KeySource.KEYBOARD,
	WORLD_20 = SDLK_WORLD_20 | KeySource.KEYBOARD,
	WORLD_21 = SDLK_WORLD_21 | KeySource.KEYBOARD,
	WORLD_22 = SDLK_WORLD_22 | KeySource.KEYBOARD,
	WORLD_23 = SDLK_WORLD_23 | KeySource.KEYBOARD,
	WORLD_24 = SDLK_WORLD_24 | KeySource.KEYBOARD,
	WORLD_25 = SDLK_WORLD_25 | KeySource.KEYBOARD,
	WORLD_26 = SDLK_WORLD_26 | KeySource.KEYBOARD,
	WORLD_27 = SDLK_WORLD_27 | KeySource.KEYBOARD,
	WORLD_28 = SDLK_WORLD_28 | KeySource.KEYBOARD,
	WORLD_29 = SDLK_WORLD_29 | KeySource.KEYBOARD,
	WORLD_30 = SDLK_WORLD_30 | KeySource.KEYBOARD,
	WORLD_31 = SDLK_WORLD_31 | KeySource.KEYBOARD,
	WORLD_32 = SDLK_WORLD_32 | KeySource.KEYBOARD,
	WORLD_33 = SDLK_WORLD_33 | KeySource.KEYBOARD,
	WORLD_34 = SDLK_WORLD_34 | KeySource.KEYBOARD,
	WORLD_35 = SDLK_WORLD_35 | KeySource.KEYBOARD,
	WORLD_36 = SDLK_WORLD_36 | KeySource.KEYBOARD,
	WORLD_37 = SDLK_WORLD_37 | KeySource.KEYBOARD,
	WORLD_38 = SDLK_WORLD_38 | KeySource.KEYBOARD,
	WORLD_39 = SDLK_WORLD_39 | KeySource.KEYBOARD,
	WORLD_40 = SDLK_WORLD_40 | KeySource.KEYBOARD,
	WORLD_41 = SDLK_WORLD_41 | KeySource.KEYBOARD,
	WORLD_42 = SDLK_WORLD_42 | KeySource.KEYBOARD,
	WORLD_43 = SDLK_WORLD_43 | KeySource.KEYBOARD,
	WORLD_44 = SDLK_WORLD_44 | KeySource.KEYBOARD,
	WORLD_45 = SDLK_WORLD_45 | KeySource.KEYBOARD,
	WORLD_46 = SDLK_WORLD_46 | KeySource.KEYBOARD,
	WORLD_47 = SDLK_WORLD_47 | KeySource.KEYBOARD,
	WORLD_48 = SDLK_WORLD_48 | KeySource.KEYBOARD,
	WORLD_49 = SDLK_WORLD_49 | KeySource.KEYBOARD,
	WORLD_50 = SDLK_WORLD_50 | KeySource.KEYBOARD,
	WORLD_51 = SDLK_WORLD_51 | KeySource.KEYBOARD,
	WORLD_52 = SDLK_WORLD_52 | KeySource.KEYBOARD,
	WORLD_53 = SDLK_WORLD_53 | KeySource.KEYBOARD,
	WORLD_54 = SDLK_WORLD_54 | KeySource.KEYBOARD,
	WORLD_55 = SDLK_WORLD_55 | KeySource.KEYBOARD,
	WORLD_56 = SDLK_WORLD_56 | KeySource.KEYBOARD,
	WORLD_57 = SDLK_WORLD_57 | KeySource.KEYBOARD,
	WORLD_58 = SDLK_WORLD_58 | KeySource.KEYBOARD,
	WORLD_59 = SDLK_WORLD_59 | KeySource.KEYBOARD,
	WORLD_60 = SDLK_WORLD_60 | KeySource.KEYBOARD,
	WORLD_61 = SDLK_WORLD_61 | KeySource.KEYBOARD,
	WORLD_62 = SDLK_WORLD_62 | KeySource.KEYBOARD,
	WORLD_63 = SDLK_WORLD_63 | KeySource.KEYBOARD,
	WORLD_64 = SDLK_WORLD_64 | KeySource.KEYBOARD,
	WORLD_65 = SDLK_WORLD_65 | KeySource.KEYBOARD,
	WORLD_66 = SDLK_WORLD_66 | KeySource.KEYBOARD,
	WORLD_67 = SDLK_WORLD_67 | KeySource.KEYBOARD,
	WORLD_68 = SDLK_WORLD_68 | KeySource.KEYBOARD,
	WORLD_69 = SDLK_WORLD_69 | KeySource.KEYBOARD,
	WORLD_70 = SDLK_WORLD_70 | KeySource.KEYBOARD,
	WORLD_71 = SDLK_WORLD_71 | KeySource.KEYBOARD,
	WORLD_72 = SDLK_WORLD_72 | KeySource.KEYBOARD,
	WORLD_73 = SDLK_WORLD_73 | KeySource.KEYBOARD,
	WORLD_74 = SDLK_WORLD_74 | KeySource.KEYBOARD,
	WORLD_75 = SDLK_WORLD_75 | KeySource.KEYBOARD,
	WORLD_76 = SDLK_WORLD_76 | KeySource.KEYBOARD,
	WORLD_77 = SDLK_WORLD_77 | KeySource.KEYBOARD,
	WORLD_78 = SDLK_WORLD_78 | KeySource.KEYBOARD,
	WORLD_79 = SDLK_WORLD_79 | KeySource.KEYBOARD,
	WORLD_80 = SDLK_WORLD_80 | KeySource.KEYBOARD,
	WORLD_81 = SDLK_WORLD_81 | KeySource.KEYBOARD,
	WORLD_82 = SDLK_WORLD_82 | KeySource.KEYBOARD,
	WORLD_83 = SDLK_WORLD_83 | KeySource.KEYBOARD,
	WORLD_84 = SDLK_WORLD_84 | KeySource.KEYBOARD,
	WORLD_85 = SDLK_WORLD_85 | KeySource.KEYBOARD,
	WORLD_86 = SDLK_WORLD_86 | KeySource.KEYBOARD,
	WORLD_87 = SDLK_WORLD_87 | KeySource.KEYBOARD,
	WORLD_88 = SDLK_WORLD_88 | KeySource.KEYBOARD,
	WORLD_89 = SDLK_WORLD_89 | KeySource.KEYBOARD,
	WORLD_90 = SDLK_WORLD_90 | KeySource.KEYBOARD,
	WORLD_91 = SDLK_WORLD_91 | KeySource.KEYBOARD,
	WORLD_92 = SDLK_WORLD_92 | KeySource.KEYBOARD,
	WORLD_93 = SDLK_WORLD_93 | KeySource.KEYBOARD,
	WORLD_94 = SDLK_WORLD_94 | KeySource.KEYBOARD,
	WORLD_95 = SDLK_WORLD_95 | KeySource.KEYBOARD,

	/* Numeric keypad */
	KP0 = SDLK_KP0 | KeySource.KEYBOARD,
	KP1 = SDLK_KP1 | KeySource.KEYBOARD,
	KP2 = SDLK_KP2 | KeySource.KEYBOARD,
	KP3 = SDLK_KP3 | KeySource.KEYBOARD,
	KP4 = SDLK_KP4 | KeySource.KEYBOARD,
	KP5 = SDLK_KP5 | KeySource.KEYBOARD,
	KP6 = SDLK_KP6 | KeySource.KEYBOARD,
	KP7 = SDLK_KP7 | KeySource.KEYBOARD,
	KP8 = SDLK_KP8 | KeySource.KEYBOARD,
	KP9 = SDLK_KP9 | KeySource.KEYBOARD,
	KP_PERIOD = SDLK_KP_PERIOD | KeySource.KEYBOARD,
	KP_DIVIDE = SDLK_KP_DIVIDE | KeySource.KEYBOARD,
	KP_MULTIPLY = SDLK_KP_MULTIPLY | KeySource.KEYBOARD,
	KP_MINUS = SDLK_KP_MINUS | KeySource.KEYBOARD,
	KP_PLUS = SDLK_KP_PLUS | KeySource.KEYBOARD,
	KP_ENTER = SDLK_KP_ENTER | KeySource.KEYBOARD,
	KP_EQUALS = SDLK_KP_EQUALS | KeySource.KEYBOARD,

	/* Arrows + Home/End pad */
	UP = SDLK_UP | KeySource.KEYBOARD,
	DOWN = SDLK_DOWN | KeySource.KEYBOARD,
	RIGHT = SDLK_RIGHT | KeySource.KEYBOARD,
	LEFT = SDLK_LEFT | KeySource.KEYBOARD,
	INSERT = SDLK_INSERT | KeySource.KEYBOARD,
	HOME = SDLK_HOME | KeySource.KEYBOARD,
	END = SDLK_END | KeySource.KEYBOARD,
	PAGEUP = SDLK_PAGEUP | KeySource.KEYBOARD,
	PAGEDOWN = SDLK_PAGEDOWN | KeySource.KEYBOARD,

	/* Function keys */
	F1 = SDLK_F1 | KeySource.KEYBOARD,
	F2 = SDLK_F2 | KeySource.KEYBOARD,
	F3 = SDLK_F3 | KeySource.KEYBOARD,
	F4 = SDLK_F4 | KeySource.KEYBOARD,
	F5 = SDLK_F5 | KeySource.KEYBOARD,
	F6 = SDLK_F6 | KeySource.KEYBOARD,
	F7 = SDLK_F7 | KeySource.KEYBOARD,
	F8 = SDLK_F8 | KeySource.KEYBOARD,
	F9 = SDLK_F9 | KeySource.KEYBOARD,
	F10 = SDLK_F10 | KeySource.KEYBOARD,
	F11 = SDLK_F11 | KeySource.KEYBOARD,
	F12 = SDLK_F12 | KeySource.KEYBOARD,
	F13 = SDLK_F13 | KeySource.KEYBOARD,
	F14 = SDLK_F14 | KeySource.KEYBOARD,
	F15 = SDLK_F15 | KeySource.KEYBOARD,

	/* Key state modifier keys */
	NUMLOCK = SDLK_NUMLOCK | KeySource.KEYBOARD,
	CAPSLOCK = SDLK_CAPSLOCK | KeySource.KEYBOARD,
	SCROLLOCK = SDLK_SCROLLOCK | KeySource.KEYBOARD,
	RSHIFT = SDLK_RSHIFT | KeySource.KEYBOARD,
	LSHIFT = SDLK_LSHIFT | KeySource.KEYBOARD,
	RCTRL = SDLK_RCTRL | KeySource.KEYBOARD,
	LCTRL = SDLK_LCTRL | KeySource.KEYBOARD,
	RALT = SDLK_RALT | KeySource.KEYBOARD,
	LALT = SDLK_LALT | KeySource.KEYBOARD,
	RMETA = SDLK_RMETA | KeySource.KEYBOARD,
	LMETA = SDLK_LMETA | KeySource.KEYBOARD,
	LSUPER = SDLK_LSUPER | KeySource.KEYBOARD,      /* Left "Windows" key */
	RSUPER = SDLK_RSUPER | KeySource.KEYBOARD,      /* Right "Windows" key */
	MODE = SDLK_MODE | KeySource.KEYBOARD,      /* "Alt Gr" key */
	COMPOSE = SDLK_COMPOSE | KeySource.KEYBOARD,      /* Multi-key compose key */

	/* Miscellaneous function keys */
	HELP = SDLK_HELP | KeySource.KEYBOARD,
	PRINT = SDLK_PRINT | KeySource.KEYBOARD,
	SYSREQ = SDLK_SYSREQ | KeySource.KEYBOARD,
	BREAK = SDLK_BREAK | KeySource.KEYBOARD,
	MENU = SDLK_MENU | KeySource.KEYBOARD,
	POWER = SDLK_POWER | KeySource.KEYBOARD,      /* Power Macintosh power key */
	EURO = SDLK_EURO | KeySource.KEYBOARD,      /* Some european keyboards */
	UNDO = SDLK_UNDO | KeySource.KEYBOARD,      /* Atari keyboard has Undo */
	
	MOUSE_LEFT = SDL_BUTTON_LEFT | KeySource.MOUSE,
	MOUSE_MIDDLE = SDL_BUTTON_MIDDLE | KeySource.MOUSE,
	MOUSE_RIGHT = SDL_BUTTON_RIGHT | KeySource.MOUSE,
	MOUSE_X1 = SDL_BUTTON_X1 | KeySource.MOUSE,
	MOUSE_X2 = SDL_BUTTON_X2 | KeySource.MOUSE
}
